@page "/"
@using IntusWindows.Sales.Order.Web.Services.Services;
@using IntusWindows.Sales.Order.Web.Blazor.Components;
@inject IDimensionService dimensionService;
@inject ProgressService progressService;
@implements IDisposable;
<div>
    <h6>Progress : @progress</h6>
</div>
<DataTableBase T="DimensionDTO" Data="Dimensions" Title="Dimensions" ShowContextMenu="false"></DataTableBase>

<div class="dock">
    <ul>
        <li>
            <img src="icons/door.png" @ref="doorElement" onclick="@(async()=>await HighlightImage("door"))"/>
        </li>
        <li>
            <img src="icons/window.png" @ref="windowElement"/>
        </li>
        <li>
            <img  src="icons/handle.png" @ref="elementElement"/>
        </li>

    </ul>

</div>

@code {

    private ElementReference doorElement;

    private ElementReference windowElement;

    private ElementReference elementElement;

    long progress;

    List<DimensionDTO> Dimensions { get; set; } = new List<DimensionDTO>();
    private async Task HighlightImage(string id)
    {
        ElementReference clickedImg = id switch
        {
            "door" => doorElement,
            "window" => windowElement,
            "handle" => elementElement,
            _ => default
        };
        //await clickedImg.AddClass(JSRuntime, "active");


    }

    protected override void OnInitialized()
    {
        //dimensionService.ProgressChanged += UpdateProgress;
        //progressBar = new Progress<long>(read =>
        //{
        //    progress = read;
        //});

    }

    void UpdateProgress(object sender,long percent)
    {
        Console.WriteLine($"Alhamdulillah..got the update");
        progress = percent;
        StateHasChanged();

    }


    protected override async Task OnInitializedAsync()
    {
        progressService.ProgressChanged += UpdateProgress;
        //service.ProgressUpdated+= UpdateProgress;
        Dimensions.Clear();
        Dimensions.AddRange( await dimensionService.GetAllDimensionsListAsync());

    }
    public void Dispose()
    {
        progressService.ProgressChanged -= UpdateProgress;

        Console.WriteLine("unregistering the update");

    }


    }