@page "/"
@inject IDimensionService dimensionService;
@inject IProgress<long> progressBar;
<div>
    <h6>Progress : @progress</h6>
</div>
<div class="dock">
    <ul>
        <li>
            <img src="icons/door.png" @ref="doorElement" onclick="@(async()=>await HighlightImage("door"))"/>
        </li>
        <li>
            <img src="icons/window.png" @ref="windowElement"/>
        </li>
        <li>
            <img  src="icons/handle.png" @ref="elementElement"/>
        </li>

    </ul>

</div>

@code {

    private ElementReference doorElement;

    private ElementReference windowElement;

    private ElementReference elementElement;

    long progress;

    private async Task HighlightImage(string id)
    {
        ElementReference clickedImg = id switch
        {
            "door" => doorElement,
            "window" => windowElement,
            "handle" => elementElement,
            _ => default
        };
        //await clickedImg.AddClass(JSRuntime, "active");


    }

    protected override void OnInitialized()
    {
        dimensionService.ProgressChanged += UpdateProgress;
        progressBar = new Progress<long>(read =>
        {
            progress = read;
        });
    }

    void UpdateProgress(int percent)
    {

        progress = percent;
        StateHasChanged();

    }
    protected override async Task OnInitializedAsync()
    {

        await dimensionService.GetAllDimensionsListAsync();

    }

}