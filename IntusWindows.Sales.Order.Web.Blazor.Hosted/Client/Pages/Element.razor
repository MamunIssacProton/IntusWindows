@page "/element"
@inject IElementService elementService;
@using IntusWindows.Sales.Order.Web.Services.Interfaces
@using IntusWindows.Sales.Order.Web.Services.Services
@using IntusWindows.Sales.Contract.DTOs
@implements IDisposable;
@inject ProgressService progressService;

<h5>progress @Progress @Elements.Count</h5>

<IntusWindows.Sales.Order.Web.Blazor.Hosted.Client.Components.Element.CreateElementComponent>

</IntusWindows.Sales.Order.Web.Blazor.Hosted.Client.Components.Element.CreateElementComponent>
<IntusWindows.Sales.Order.Web.Blazor.Hosted.Client.Components.DataTableBase T="ElementDTO" Data="Elements" Title="Available Elements">

</IntusWindows.Sales.Order.Web.Blazor.Hosted.Client.Components.DataTableBase>

@code {

    List<ElementDTO> Elements { get; set; } = new List<ElementDTO>();
    long Progress;
    protected override async Task OnInitializedAsync()
    {
        progressService.ProgressChanged += OnProgressChanged;
        Elements.Clear();
        Elements.AddRange(await elementService.GetElementsAsync());

    }

    void OnProgressChanged(object sender, long progress)
    {
        this.Progress = progress;
        StateHasChanged();
    }

    public void Dispose() =>
          progressService.ProgressChanged -= OnProgressChanged;

}

